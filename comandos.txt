

docker container run hello-world

docker container run debian bash --version

docker container ps -a

docker container run -it debian bash

docker container run --name mydeb -it debian bash

docker container ls

docker container ls -a

docker container start -ai mydeb

docker container run -p 8080:80 nginx

docker container run -p 8080:80 -v /Users/aldoiguerra/Codigos/docker/exercicio1/html:/usr/share/nginx/html nginx

docker container start ex-daemon-basic

docker container restart ex-daemon-basic

docker container stop ex-daemon-basic

docker container logs ex-daemon-basic

docker container inspect ex-daemon-basic

docker image pull redis:latest

docker image ls

docker image rm redis:latest cod3r-redis

docker image build -t ex-simple-build .

docker container run -p 80:80 ex-simple-build

docker image build --build-arg S3_BUCKET=myapp -t ex-build-arg .

docker container run ex-build-arg bash -c 'echo $S3_BUCKET'

docker image build -t ex-build-copy . 

docker container run -p 80:80 ex-build-copy  

docker image build -t ex-build-dev .

docker container run -it -v $(pwd):/app -p 80:8000 --name python-server ex-build-dev

docker container run -it --volumes-from=python-server debian cat /log/server.log

docker container run --rm alpine ash -c "ifconfig" 

docker container run --rm --net none alpine ash -c "ifconfig"

docker container run -d --name container1 alpine sleep 1000

docker container run -d --name container2 alpine sleep 1000

docker container exec -it container2 ifconfig

docker container exec -it container1 ping 172.17.0.3 

docker container exec -it container1 ping www.google.com

docker network create --driver bridge rede_nova

docker network ls

docker container run -d --name container3 --net rede_nova alpine sleep 1000

docker container exec -it container3 ping 172.17.0.2

docker network connect bridge container3

docker container exec -it container3 ping 172.17.0.2

docker network disconnect bridge container3 

